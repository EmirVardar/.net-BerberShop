// <auto-generated />
using System;
using BarberShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241214162959_calisansaati2")]
    partial class calisansaati2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarberShop.Models.Calisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("BarberShop.Models.CalisanHizmet", b =>
                {
                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<int>("HizmetId")
                        .HasColumnType("int");

                    b.HasKey("CalisanId", "HizmetId");

                    b.HasIndex("HizmetId");

                    b.ToTable("CalisanHizmetleri");
                });

            modelBuilder.Entity("BarberShop.Models.Hizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Hizmetler");
                });

            modelBuilder.Entity("BarberShop.Models.Calisan", b =>
                {
                    b.OwnsMany("BarberShop.Models.CalismaSaati", "CalismaSaatleri", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<TimeSpan>("BaslangicSaati")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("BitisSaati")
                                .HasColumnType("time");

                            b1.Property<int>("CalisanId")
                                .HasColumnType("int");

                            b1.Property<int>("Gun")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("CalisanId");

                            b1.ToTable("CalismaSaati");

                            b1.WithOwner()
                                .HasForeignKey("CalisanId");
                        });

                    b.Navigation("CalismaSaatleri");
                });

            modelBuilder.Entity("BarberShop.Models.CalisanHizmet", b =>
                {
                    b.HasOne("BarberShop.Models.Calisan", "Calisan")
                        .WithMany("CalisanHizmetleri")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShop.Models.Hizmet", "Hizmet")
                        .WithMany("CalisanHizmetleri")
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");
                });

            modelBuilder.Entity("BarberShop.Models.Calisan", b =>
                {
                    b.Navigation("CalisanHizmetleri");
                });

            modelBuilder.Entity("BarberShop.Models.Hizmet", b =>
                {
                    b.Navigation("CalisanHizmetleri");
                });
#pragma warning restore 612, 618
        }
    }
}
